\NeedsTeXFormat{LaTeX2e}[1999/01/01]
\ProvidesPackage{nntikz}[2018/09/25]

\RequirePackage{ifthen}
\RequirePackage{xargs}
\RequirePackage{xparse}
\RequirePackage{tikz}
\usetikzlibrary{calc,shapes,arrows}
\usetikzlibrary{decorations.pathreplacing,decorations.markings}

% macros tracers des graphes de r√©seau de neurones
% version 1.1

\gdef\xoff{1}
\gdef\yoff{1}
\tikzstyle{neuron}=[thick,draw,circle,minimum size=10pt,inner sep=0pt]
\newcommand{\neuron}[1]{
\tikzstyle{neuron}+=[#1]
}
\tikzstyle{neuron input}=[fill=green!50,neuron]
\tikzstyle{neuron output}=[fill=red!50,neuron]

\newcommandx{\nninput}[3][2=1,3=]
{
	\def\dim{#2}
        \expandafter\newcommand\csname#1\endcsname{#2}
        \foreach \xn in {1,...,\dim} {
		\pgfmathsetmacro{\y}{\yoff*\xn-(\dim-1)*\yoff/2}
                \ifthenelse{\equal{#3}{}}{
                    \node[neuron input] (#1-\xn) at (0,\y) {};
                }{
                    \node[minimum size=20pt,neuron input] (#1-\xn) at (0,\y) {$#3_{\xn}$};
                }
	    }
}
\newcommandx{\nnoutput}[4][2=1,3=0,4=]
{
	\def\dim{#2}
        \expandafter\newcommand\csname#1\endcsname{#2}
	\foreach \xn in {1,...,\dim} {
		\pgfmathsetmacro{\y}{\yoff*\xn-(\dim-1)*\yoff/2}
                \ifthenelse{\equal{#4}{}}{
                    \node[neuron output] (#1-\xn) at (#3*\xoff,\y) {};
                }{
                    \node[minimum size=20pt,neuron output] (#1-\xn) at (#3*\xoff,\y) {$#4_{\xn}$};
                }
	    }
}
\newcommandx{\nnhidden}[4][2=1,3=0,4=]
{
	\def\dim{#2}
	\pgfmathsetmacro{\colo}{#3*15}
        \expandafter\newcommand\csname#1\endcsname{#2}
	\foreach \xn in {1,...,\dim} {
		\pgfmathsetmacro{\y}{\yoff*\xn-(\dim-1)*\yoff/2}
                \ifthenelse{\equal{#4}{}}{
                    \node[fill=blue!\colo,neuron] (#1-\xn) at (#3*\xoff,\y) {};
                }{
                    \node[minimum size=20pt,fill=blue!\colo,neuron] (#1-\xn) at (#3*\xoff,\y) {$#4_{#3\xn}$};
                }
	    }
}

\newcommandx{\nnfull}[3][3=]{%
	\foreach \source in {1,...,\csname#1\endcsname}{
		\foreach \dest in {1,...,\csname#2\endcsname}
		{
			\path (#1-\source) edge[-latex,#3] (#2-\dest);
		}
	}
}
